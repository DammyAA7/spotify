datasource db{
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  auth_id          String          @id // Auth0 ID as the primary key
  spotify_id       String          // Spotify ID as the primary key
  name             String          // User's display name
  email            String          @unique
  accessToken      String?         // Spotify access token
  imageUrl         String?         // URL for the user's profile image
  createdAt        DateTime        @default(now())
  sentRecommendations Recommendations[] @relation("FromUser")
  receivedRecommendations Recommendations[] @relation("ToUser")
}


model Song {
  id                Int             @id @default(autoincrement())
  title             String
  artist            String
  genre             String
  recommendationSongs RecommendationSongs[]
}

model Recommendations {
  id               Int             @id @default(autoincrement())
  fromUserId       String
  toUserId         String
  fromUser         User            @relation("FromUser", fields: [fromUserId], references: [auth_id])
  toUser           User            @relation("ToUser", fields: [toUserId], references: [auth_id])
  createdAt        DateTime        @default(now())
  recommendationSongs RecommendationSongs[]
}

model RecommendationSongs {
  id               Int             @id @default(autoincrement())
  recommendationId Int
  songId           Int
  createdAt        DateTime        @default(now())
  recommendation   Recommendations @relation(fields: [recommendationId], references: [id])
  song             Song            @relation(fields: [songId], references: [id])
}
